/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cs318_project;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GradientPaint;
import java.awt.RenderingHints;
import java.util.Map;
import javax.swing.JComponent;
import javax.swing.AbstractButton;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author peera
 */
public final class Endgame extends javax.swing.JFrame {

    /**
     * Creates new form Endgame
     */
    private final String playerName;
    private final int finalScore;
    private final String difficulty;
public Endgame(String playerName, int finalScore, String difficulty) {
    initComponents();
    this.playerName = playerName;
    this.finalScore = finalScore;
    this.difficulty = difficulty;
    lbl_Score.setText(String.valueOf(finalScore)); // แสดงคะแนน
    loadScores(); // โหลดคะแนนเข้า JTable
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_rating = new javax.swing.JLabel();
        btn_Play_Again = new javax.swing.JButton();
        btn_End = new javax.swing.JButton();
        lbl_picapple = new javax.swing.JLabel();
        lbl_Score = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableScore = new javax.swing.JTable();
        lbl_floor_1 = new javax.swing.JLabel();
        lbl_floor_2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(249, 241, 224));

        lbl_rating.setFont(new java.awt.Font("IrisUPC", 1, 48)); // NOI18N
        lbl_rating.setText("Rating");

        btn_Play_Again.setFont(new java.awt.Font("IrisUPC", 1, 36)); // NOI18N
        btn_Play_Again.setText("Play Again");
        btn_Play_Again.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_Play_AgainMouseClicked(evt);
            }
        });
        btn_Play_Again.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Play_AgainActionPerformed(evt);
            }
        });

        btn_End.setFont(new java.awt.Font("LilyUPC", 1, 36)); // NOI18N
        btn_End.setText("End");
        btn_End.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_EndMouseClicked(evt);
            }
        });
        btn_End.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EndActionPerformed(evt);
            }
        });

        lbl_picapple.setIcon(new javax.swing.ImageIcon(getClass().getResource("/applered_1.png"))); // NOI18N

        lbl_Score.setFont(new java.awt.Font("LilyUPC", 1, 48)); // NOI18N
        lbl_Score.setText("0");

        tableScore.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Score"
            }
        ));
        jScrollPane2.setViewportView(tableScore);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lbl_picapple, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_Score)
                        .addGap(270, 270, 270))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btn_End, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_Play_Again, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE))
                        .addGap(161, 161, 161))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(339, 339, 339)
                .addComponent(lbl_rating)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(lbl_rating)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_picapple)
                            .addComponent(lbl_Score))
                        .addGap(18, 18, 18)
                        .addComponent(btn_Play_Again, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_End, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(61, Short.MAX_VALUE))))
        );

        btn_Play_Again.setContentAreaFilled(false); // ปิดพื้นที่ปุ่มปกติ
        btn_Play_Again.setFocusPainted(false); // ปิดการแสดงผลโฟกัส
        btn_Play_Again.setBorderPainted(false); // ปิดการแสดงผลขอบ
        btn_Play_Again.setOpaque(false); // ทำให้ปุ่มโปร่งใสเพื่อให้การวาดเงาทำงาน
        btn_Play_Again.setForeground(Color.WHITE); // สีข้อความ
        btn_Play_Again.setFont(new Font("LilyUPC", Font.BOLD, 36)); // ตั้งฟอนต์

        // ปรับแต่ง UI สำหรับการวาดปุ่ม
        btn_Play_Again.setUI(new javax.swing.plaf.basic.BasicButtonUI() {
            private boolean isHovered = false; // ตัวแปรสำหรับตรวจจับ Hover

            @Override
            public void paint(Graphics g, JComponent c) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                int width = c.getWidth();
                int height = c.getHeight();

                // วาดเงาด้านหลังปุ่ม
                g2.setColor(new Color(255, 102, 0, 100)); // สีเงา (ส้มอ่อนโปร่งแสง)
                g2.fillRoundRect(5, 10, width - 10, height - 10, 30, 30);

                // วาดพื้นหลังปุ่ม (ไล่ระดับสี)
                GradientPaint gradientPaint = new GradientPaint(
                    0, 0,
                    isHovered ? new Color(255, 204, 0) : new Color(255, 153, 0), // สีเมื่อ Hover หรือปกติ
                    0, height,
                    isHovered ? new Color(255, 180, 0) : new Color(255, 102, 0)
                );
                g2.setPaint(gradientPaint);
                g2.fillRoundRect(0, 0, width - 10, height - 10, 30, 30);

                // วาดข้อความของปุ่ม
                super.paint(g, c);
                g2.dispose();
            }

            @Override
            protected void installListeners(final AbstractButton b) {
                super.installListeners(b);

                // เพิ่ม MouseListener เพื่อจัดการ Hover Effect
                b.addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseEntered(java.awt.event.MouseEvent e) {
                        isHovered = true;
                        b.repaint();
                    }

                    @Override
                    public void mouseExited(java.awt.event.MouseEvent e) {
                        isHovered = false;
                        b.repaint();
                    }
                });
            }
        });
        btn_End.setContentAreaFilled(false); // ปิดพื้นที่ปุ่มปกติ
        btn_End.setFocusPainted(false); // ปิดการแสดงผลโฟกัส
        btn_End.setBorderPainted(false); // ปิดการแสดงผลขอบ
        btn_End.setOpaque(false); // ทำให้ปุ่มโปร่งใสเพื่อให้การวาดเงาทำงาน
        btn_End.setForeground(Color.WHITE); // สีข้อความ
        btn_End.setFont(new Font("LilyUPC", Font.BOLD, 36)); // ตั้งฟอนต์

        // ปรับแต่ง UI สำหรับการวาดปุ่ม
        btn_End.setUI(new javax.swing.plaf.basic.BasicButtonUI() {
            private boolean isHovered = false; // ตัวแปรสำหรับตรวจจับ Hover

            @Override
            public void paint(Graphics g, JComponent c) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                int width = c.getWidth();
                int height = c.getHeight();

                // วาดเงาด้านหลังปุ่ม
                g2.setColor(new Color(255, 102, 0, 100)); // สีเงา (ส้มอ่อนโปร่งแสง)
                g2.fillRoundRect(5, 10, width - 10, height - 10, 30, 30);

                // วาดพื้นหลังปุ่ม (ไล่ระดับสี)
                GradientPaint gradientPaint = new GradientPaint(
                    0, 0,
                    isHovered ? new Color(255, 204, 0) : new Color(255, 153, 0), // สีเมื่อ Hover หรือปกติ
                    0, height,
                    isHovered ? new Color(255, 180, 0) : new Color(255, 102, 0)
                );
                g2.setPaint(gradientPaint);
                g2.fillRoundRect(0, 0, width - 10, height - 10, 30, 30);

                // วาดข้อความของปุ่ม
                super.paint(g, c);
                g2.dispose();
            }

            @Override
            protected void installListeners(final AbstractButton b) {
                super.installListeners(b);

                // เพิ่ม MouseListener เพื่อจัดการ Hover Effect
                b.addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseEntered(java.awt.event.MouseEvent e) {
                        isHovered = true;
                        b.repaint();
                    }

                    @Override
                    public void mouseExited(java.awt.event.MouseEvent e) {
                        isHovered = false;
                        b.repaint();
                    }
                });
            }
        });

        lbl_floor_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/floor.png"))); // NOI18N

        lbl_floor_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/floor.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbl_floor_1)
                .addGap(0, 0, 0)
                .addComponent(lbl_floor_2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_floor_1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_floor_2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_Play_AgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Play_AgainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_Play_AgainActionPerformed

    private void btn_EndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EndActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_EndActionPerformed

    private void btn_Play_AgainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_Play_AgainMouseClicked
    homepage home = new homepage();
    home.setVisible(true);
    this.dispose();
    }//GEN-LAST:event_btn_Play_AgainMouseClicked

    private void btn_EndMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_EndMouseClicked
    System.exit(0);       // TODO add your handling code here:
    }//GEN-LAST:event_btn_EndMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Endgame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Endgame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Endgame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Endgame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Endgame("PlayerName", 10,"Easy").setVisible(true);
            }
        });
    }
    
public void loadScores() {
    Map<String, Integer> scores = ScoreManager.loadScores(difficulty);
    DefaultTableModel model = (DefaultTableModel) tableScore.getModel();

    model.setRowCount(0); // ล้างข้อมูลเก่าในตาราง
    System.out.println("Cleared table. Adding rows...");

    // จัดเรียงคะแนนจากมากไปน้อย
    scores.entrySet()
          .stream()
          .sorted((e1, e2) -> Integer.compare(e2.getValue(), e1.getValue())) // เรียงจากมากไปน้อย
          .forEach(entry -> {
              System.out.println("Adding to table: " + entry.getKey() + " - " + entry.getValue());
              model.addRow(new Object[]{entry.getKey(), entry.getValue()});
          });

    tableScore.revalidate();
    tableScore.repaint();

    System.out.println("Table updated successfully.");
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_End;
    private javax.swing.JButton btn_Play_Again;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_Score;
    private javax.swing.JLabel lbl_floor_1;
    private javax.swing.JLabel lbl_floor_2;
    private javax.swing.JLabel lbl_picapple;
    private javax.swing.JLabel lbl_rating;
    private javax.swing.JTable tableScore;
    // End of variables declaration//GEN-END:variables
}
